{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderdanson/PycharmProjects/sudoku_app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction App() {\n  const [sudoku_grid, setSudokuGrid] = useState([]);\n  useEffect(() => {\n    fetch('/generate_board').then(res => res.json()).then(data => {\n      setSudokuGrid(data.board);\n    });\n  }, []);\n  const [show, setShow] = useState(true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"The board is \", sudoku_grid), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Generate New Board\")), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    show: show,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Welcome to Sudoku!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"I hope you can solve the puzzle. The aim is to place each of the numbers 1-9 in the grid, 9 times! Easy? Well... you're not allowed the same number in the same row twice! Aaannd....you're not allowed to use the same number in the same column twice either! And just to make it extra hard, you can't have the same number in the same section either. Good luck!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShow(false),\n    variant: \"outline-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Close Instructions!\"))), !show && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShow(true),\n    variant: \"outline-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, \"Show Instructions\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexanderdanson/PycharmProjects/sudoku_app/src/App.js"],"names":["React","useState","useEffect","Button","Alert","App","sudoku_grid","setSudokuGrid","fetch","then","res","json","data","board","show","setShow","window","location","reload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,iBAAD,CAAL,CAAyBC,IAAzB,CAA8BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArC,EAAiDF,IAAjD,CAAsDG,IAAI,IAAI;AAC5DL,MAAAA,aAAa,CAACK,IAAI,CAACC,KAAN,CAAb;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBK,WAAjB,CAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMU,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEJ,IAAb;AAAmB,IAAA,OAAO,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6WAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA9B;AAAuC,IAAA,OAAO,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAVF,CADF,EAkBG,CAACD,IAAD,iBAAS,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,IAAD,CAA9B;AAAsC,IAAA,OAAO,EAAC,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAlBZ,CAPF,CADF;AA8BD;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction App() {\n\n  const [sudoku_grid, setSudokuGrid] = useState([]);\n\n  useEffect(() => {\n    fetch('/generate_board').then(res => res.json()).then(data => {\n      setSudokuGrid(data.board);\n    });\n  }, []);\n\n  const [show, setShow] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n\n        <p>The board is {sudoku_grid}</p>\n        <Button onClick={() => window.location.reload()}>Generate New Board</Button>\n      </header>\n      <body>\n        <Alert show={show} variant=\"success\">\n          <Alert.Heading>Welcome to Sudoku!</Alert.Heading>\n          <p>\n            I hope you can solve the puzzle. The aim is to place each of the numbers 1-9 in the grid, 9 times! Easy?\n            Well... you're not allowed the same number in the same row twice!\n            Aaannd....you're not allowed to use the same number in the same column twice either!\n            And just to make it extra hard, you can't have the same number in the same section either. \n            Good luck!\n        </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button onClick={() => setShow(false)} variant=\"outline-success\">\n              Close Instructions!\n          </Button>\n          </div>\n        </Alert>\n\n        {!show && <Button onClick={() => setShow(true)} variant=\"outline-danger\">Show Instructions</Button>}\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}